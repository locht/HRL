Imports Framework.UI
Imports Framework.UI.Utilities
Imports Profile.ProfileBusiness
Imports Telerik.Web.UI
Imports Common
Imports Common.Common
Imports Common.CommonMessage
Imports System.IO
Imports System.Runtime.Serialization.Formatters.Binary
Imports System.Xml.Serialization

Public Class ctrlHU_EmpDtlProfile
    Inherits CommonView
    Dim employeeCode As String
    Public Property EmployeeID As Decimal
    Protected WithEvents ctrlFindOrgPopup As ctrlFindOrgPopup
    Protected WithEvents ctrlFindEmployeePopup As ctrlFindEmployeePopup
    Public Overrides Property MustAuthorize As Boolean = False

#Region "Properties"

    Property EmployeeInfo As EmployeeDTO
        Get
            Return PageViewState(Me.ID & "_EmployeeInfo")
        End Get
        Set(ByVal value As EmployeeDTO)
            PageViewState(Me.ID & "_EmployeeInfo") = value
        End Set
    End Property

	Property EmployeeTerID As Decimal
        Get
            Return PageViewState(Me.ID & "_EmployeeTerID")
        End Get
        Set(ByVal value As Decimal)
            PageViewState(Me.ID & "_EmployeeTerID") = value
        End Set
    End Property

	'0 - normal
    '1 - Chọn Org
    '2 - Chọn Quản lý trực tiếp
    Property isLoadPopup As Decimal
        Get
            Return PageViewState(Me.ID & "_isLoadPopup")
        End Get
        Set(ByVal value As Decimal)
            PageViewState(Me.ID & "_isLoadPopup") = value
        End Set
    End Property

    Property isLoad As Boolean
        Get
            Return PageViewState(Me.ID & "_isLoad")
        End Get
        Set(ByVal value As Boolean)
            PageViewState(Me.ID & "_isLoad") = value
        End Set
    End Property

    'Lưu lại đang ở View nào để load khi dùng nút Next và Previous để chuyển sang xem thông tin nhân viên khác.
    Public Property CurrentPlaceHolder As String
        Get
            Return PageViewState(Me.ID & "_CurrentPlaceHolder")
        End Get
        Set(ByVal value As String)
            PageViewState(Me.ID & "_CurrentPlaceHolder") = value
        End Set
    End Property

    Property ImageFile As Telerik.Web.UI.UploadedFile
        Get
            Return PageViewState(Me.ID & "_ImageFile")
        End Get
        Set(ByVal value As Telerik.Web.UI.UploadedFile)
            PageViewState(Me.ID & "_ImageFile") = value
        End Set
    End Property

#End Region

#Region "Page"
    Public _DIRECT_MANAGER As String
    Public _LEVEL_MANAGER As String
    Public _ORG_ID As String
    Public Overrides Sub ViewLoad(ByVal e As System.EventArgs)
        Try
            UpdateControlState()
            Refresh()
            CurrentPlaceHolder = Me.ViewName
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Public Overrides Sub Refresh(Optional ByVal Message As String = "")
        If EmployeeInfo IsNot Nothing Then
            EmployeeID = EmployeeInfo.ID
            ctrlHU_TitleConcurrent.SetProperty("EmployeeID", EmployeeID)
        End If
        If Not isLoad Then
            Using rep As New ProfileBusinessRepository
                If EmployeeInfo IsNot Nothing AndAlso EmployeeInfo.ID <> 0 Then
                    lstbPaper.ClearChecked()
                    If EmployeeInfo.lstPaper IsNot Nothing Then
                        For Each item As RadListBoxItem In lstbPaper.Items
                            If EmployeeInfo.lstPaper.Contains(item.Value) Then
                                item.Checked = True
                            End If
                        Next
                    End If
                    lstbPaperFiled.ClearChecked()
                    If EmployeeInfo.lstPaperFiled IsNot Nothing Then
                        For Each item As RadListBoxItem In lstbPaperFiled.Items
                            If EmployeeInfo.lstPaperFiled.Contains(item.Value) Then
                                item.Checked = True
                            End If
                        Next
                    End If
                    hidID.Value = EmployeeInfo.ID
                    If EmployeeInfo.LAST_WORKING_ID IsNot Nothing Then
                        hidWorkingID.Value = EmployeeInfo.LAST_WORKING_ID
                    End If
                    If EmployeeInfo.CONTRACT_ID IsNot Nothing Then
                        hidContractID.Value = EmployeeInfo.CONTRACT_ID
                    End If
                    If EmployeeInfo.WORK_STATUS = ProfileCommon.OT_WORK_STATUS.TERMINATE_ID Then
                        hidIsTer.Value = -1
                    End If
                    ''Info
                    lblChucDanh.Text = EmployeeInfo.TITLE_NAME_VN
                    lblPhongBan.Text = EmployeeInfo.ORG_NAME
                    lblQLTT.Text = EmployeeInfo.DIRECT_MANAGER_NAME
                    lblQLTMC.Text = EmployeeInfo.LEVEL_MANAGER_NAME
                    _DIRECT_MANAGER = Utilities.ObjToString(EmployeeInfo.DIRECT_MANAGER)
                    _LEVEL_MANAGER = Utilities.ObjToString(EmployeeInfo.LEVEL_MANAGER)
                    _ORG_ID = EmployeeInfo.ORG_ID
                    ''
                    txtEmpCODE.Text = EmployeeInfo.EMPLOYEE_CODE
                    txtFirstNameVN.Text = EmployeeInfo.FIRST_NAME_VN
                    txtLastNameVN.Text = EmployeeInfo.LAST_NAME_VN
                    hidOrgID.Value = EmployeeInfo.ORG_ID
                    txtOrgName.Text = EmployeeInfo.ORG_NAME
                    txtOrgName.ToolTip = Utilities.DrawTreeByString(EmployeeInfo.ORG_DESC)
                    If EmployeeInfo.ORG_DESC.Split(";").Count > 1 Then
                        Dim orgName2 = EmployeeInfo.ORG_DESC.ToString.Split(";")(1)
                        If orgName2 <> "" Then
                            txtOrgName2.Text = orgName2 '.Substring(orgName2.IndexOf(" - ") + 3)
                        Else
                            txtOrgName.Text = ""
                            txtOrgName.ToolTip = ""
                            txtOrgName2.Text = EmployeeInfo.ORG_NAME
                            txtOrgName2.ToolTip = Utilities.DrawTreeByString(EmployeeInfo.ORG_DESC)
                        End If
                    End If
                    cboTitle.SelectedValue = EmployeeInfo.TITLE_ID
                    cboTitle.Text = EmployeeInfo.TITLE_NAME_VN
                    txtTitleGroup.Text = EmployeeInfo.TITLE_GROUP_NAME
                    rdJoinDate.SelectedDate = EmployeeInfo.JOIN_DATE
                    rdJoinDateState.SelectedDate = EmployeeInfo.JOIN_DATE_STATE
                    txtContractType.Text = EmployeeInfo.CONTRACT_TYPE_NAME
                    rdContractEffectDate.SelectedDate = EmployeeInfo.CONTRACT_EFFECT_DATE
                    rdContractExpireDate.SelectedDate = EmployeeInfo.CONTRACT_EXPIRE_DATE
                    If EmployeeInfo.STAFF_RANK_ID IsNot Nothing Then
                        cboStaffRank.SelectedValue = EmployeeInfo.STAFF_RANK_ID
                        cboStaffRank.Text = EmployeeInfo.STAFF_RANK_NAME
                    End If
					If EmployeeInfo.EMP_OBJ_ID IsNot Nothing Then
                        cboEmpObj.SelectedValue = EmployeeInfo.EMP_OBJ_ID
                        cboEmpObj.Text = EmployeeInfo.EMP_OBJ_NAME
                    End If

					If EmployeeInfo.DIRECT_MANAGER IsNot Nothing Then
                        txtDirectManager.Text = EmployeeInfo.DIRECT_MANAGER_NAME
                        hidDirectManager.Value = EmployeeInfo.DIRECT_MANAGER
                    End If
                    If EmployeeInfo.LEVEL_MANAGER IsNot Nothing Then
                        txtLevelManager.Text = EmployeeInfo.LEVEL_MANAGER_NAME
                        hidLevelManager.Value = EmployeeInfo.LEVEL_MANAGER
                    End If
                    rntxtTimeID.Value = EmployeeInfo.ITIME_ID

                    If EmployeeInfo.WORK_STATUS IsNot Nothing Then
                        cboWorkStatus.Text = EmployeeInfo.WORK_STATUS_NAME
                        cboWorkStatus.SelectedValue = EmployeeInfo.WORK_STATUS
                    End If

                    If EmployeeInfo.LAST_WORKING_ID IsNot Nothing Then
                        btnFindOrg.Enabled = False
                        EnableRadCombo(cboTitle, False)
                    End If
                    Dim empCV As EmployeeCVDTO
                    Dim empEdu As EmployeeEduDTO
                    Dim empHealth As EmployeeHealthDTO
                    rep.GetEmployeeAllByID(EmployeeInfo.ID, empCV, empEdu, empHealth)
                    If empCV IsNot Nothing Then
                        If empCV.WORKPLACE_ID IsNot Nothing Then
                            cboWorkplace.SelectedValue = empCV.WORKPLACE_ID
                            cboWorkplace.Text = empCV.WORKPLACE_NAME
                        End If
                        If empCV.INS_REGION_ID IsNot Nothing Then
                            cboInsRegion.SelectedValue = empCV.INS_REGION_ID
                            cboInsRegion.Text = empCV.INS_REGION_NAME
                        End If
                        If empCV.GENDER IsNot Nothing Then
                            cboGender.SelectedValue = empCV.GENDER
                            cboGender.Text = empCV.GENDER_NAME
                        End If
                        rdBirthDate.SelectedDate = empCV.BIRTH_DATE
                        txtBirthPlace.Text = empCV.BIRTH_PLACE
                        If empCV.MARITAL_STATUS IsNot Nothing Then
                            cboFamilyStatus.SelectedValue = empCV.MARITAL_STATUS
                            cboFamilyStatus.Text = empCV.MARITAL_STATUS_NAME
                        End If
                        If empCV.RELIGION IsNot Nothing Then
                            cboReligion.SelectedValue = empCV.RELIGION
                            cboReligion.Text = empCV.RELIGION_NAME
                        End If
                        If empCV.NATIVE IsNot Nothing Then
                            cboNative.SelectedValue = empCV.NATIVE
                            cboNative.Text = empCV.NATIVE_NAME
                        End If
                        If empCV.NATIONALITY IsNot Nothing Then
                            cboNationlity.SelectedValue = empCV.NATIONALITY
                            cboNationlity.Text = empCV.NATIONALITY_NAME
                        End If
                        txtNavAddress.Text = empCV.NAV_ADDRESS
                        If empCV.NAV_PROVINCE IsNot Nothing Then
                            cboNav_Province.SelectedValue = empCV.NAV_PROVINCE
                            cboNav_Province.Text = empCV.NAV_PROVINCE_NAME
                        End If
                        If empCV.NAV_DISTRICT IsNot Nothing Then
                            cboNav_District.SelectedValue = empCV.NAV_DISTRICT
                            cboNav_District.Text = empCV.NAV_DISTRICT_NAME
                        End If
                        If empCV.NAV_WARD IsNot Nothing Then
                            cboNav_Ward.SelectedValue = empCV.NAV_WARD
                            cboNav_Ward.Text = empCV.NAV_WARD_NAME
                        End If
                        txtPerAddress.Text = empCV.PER_ADDRESS
                        If empCV.PER_PROVINCE IsNot Nothing Then
                            cboPer_Province.SelectedValue = empCV.PER_PROVINCE
                            cboPer_Province.Text = empCV.PER_PROVINCE_NAME
                        End If
                        If empCV.PER_DISTRICT IsNot Nothing Then
                            cboPer_District.SelectedValue = empCV.PER_DISTRICT
                            cboPer_District.Text = empCV.PER_DISTRICT_NAME
                        End If
                        If empCV.PER_WARD IsNot Nothing Then
                            cboPer_Ward.SelectedValue = empCV.PER_WARD
                            cboPer_Ward.Text = empCV.PER_WARD_NAME
                        End If
                        ' SĐT
                        txtHomePhone.Text = empCV.HOME_PHONE
                        txtMobilePhone.Text = empCV.MOBILE_PHONE
                        ' CMND
                        txtID_NO.Text = empCV.ID_NO
                        rdIDDate.SelectedDate = empCV.ID_DATE
                        txtIDPlace.Text = empCV.ID_PLACE
                        'Hộ chiếu
                        txtPassNo.Text = empCV.PASS_NO
                        rdPassDate.SelectedDate = empCV.PASS_DATE
                        rdPassExpireDate.SelectedDate = empCV.PASS_EXPIRE
                        txtPassPlace.Text = empCV.PASS_PLACE
                        'Visa
                        txtVisa.Text = empCV.VISA
                        rdVisaDate.SelectedDate = empCV.VISA_DATE
                        rdVisaExpireDate.SelectedDate = empCV.VISA_EXPIRE
                        txtVisaPlace.Text = empCV.VISA_PLACE
                        'Giấy phép lao động
                        txtWorkPermit.Text = empCV.WORK_PERMIT
                        rdWorkPermitDate.SelectedDate = empCV.WORK_PERMIT_DATE
                        rdWorPermitExpireDate.SelectedDate = empCV.WORK_PERMIT_EXPIRE
                        txtWorkPermitPlace.Text = empCV.WORK_PERMIT_PLACE
                        txtPitCode.Text = empCV.PIT_CODE
                        txtPerEmail.Text = empCV.PER_EMAIL
                        txtCareer.Text = empCV.CAREER
                        txtWorkEmail.Text = empCV.WORK_EMAIL
                        'Người liên hệ khi cần
                        txtContactPerson.Text = empCV.CONTACT_PER
                        'Điện thoại người liên hệ
                        txtContactPersonPhone.Text = empCV.CONTACT_PER_PHONE
                        chkDangPhi.Checked = False
                        If empCV.DANG_PHI IsNot Nothing Then
                            chkDangPhi.Checked = empCV.DANG_PHI
                        End If
                        chkDoanPhi.Checked = False
                        If empCV.DOAN_PHI IsNot Nothing Then
                            chkDoanPhi.Checked = empCV.DOAN_PHI
                        End If
                        If empCV.BANK_ID IsNot Nothing Then
                            cboBank.SelectedValue = empCV.BANK_ID
                            cboBank.Text = empCV.BANK_NAME
                        End If
                        If empCV.BANK_BRANCH_ID IsNot Nothing Then
                            cboBankBranch.SelectedValue = empCV.BANK_BRANCH_ID
                            cboBankBranch.Text = empCV.BANK_BRANCH_NAME
                        End If

                        rdNgayVaoDang.SelectedDate = empCV.NGAY_VAO_DANG
                        rdNgayVaoDoan.SelectedDate = empCV.NGAY_VAO_DOAN
                        txtChucVuDang.Text = empCV.CHUC_VU_DANG
                        txtChucVuDoan.Text = empCV.CHUC_VU_DOAN
                        txtNoiVaoDang.Text = empCV.NOI_VAO_DANG
                        txtNoiVaoDoan.Text = empCV.NOI_VAO_DOAN
                        txtBankNo.Text = empCV.BANK_NO

                    End If
                    If empEdu IsNot Nothing Then
                        If empEdu.ACADEMY IsNot Nothing Then
                            cboAcademy.SelectedValue = empEdu.ACADEMY
                            cboAcademy.Text = empEdu.ACADEMY_NAME
                        End If
                        If empEdu.TRAINING_FORM IsNot Nothing Then
                            cboTrainingForm.SelectedValue = empEdu.TRAINING_FORM
                            cboTrainingForm.Text = empEdu.TRAINING_FORM_NAME
                        End If
                        If empEdu.LEARNING_LEVEL IsNot Nothing Then
                            cboLearningLevel.SelectedValue = empEdu.LEARNING_LEVEL
                            cboLearningLevel.Text = empEdu.LEARNING_LEVEL_NAME
                        End If
                        If empEdu.LANGUAGE_LEVEL IsNot Nothing Then
                            cboLangLevel.SelectedValue = empEdu.LANGUAGE_LEVEL
                            cboLangLevel.Text = empEdu.LANGUAGE_LEVEL_NAME
                        End If
                        txtLangMark.Text = empEdu.LANGUAGE_MARK
                        If empEdu.LANGUAGE IsNot Nothing Then
                            txtLanguage.Text = empEdu.LANGUAGE
                        End If
                        If empEdu.MAJOR IsNot Nothing Then
                            cboMajor.SelectedValue = empEdu.MAJOR
                            cboMajor.Text = empEdu.MAJOR_NAME
                        End If
                        txtMajorRemark.Text = empEdu.MAJOR_REMARK
                        If empEdu.GRADUATE_SCHOOL_ID IsNot Nothing Then
                            cboGraduateSchool.SelectedValue = empEdu.GRADUATE_SCHOOL_ID
                            cboGraduateSchool.Text = empEdu.GRADUATE_SCHOOL_NAME
                        End If
                    End If

                    If empHealth IsNot Nothing Then
                        txtCanNang.Text = empHealth.CAN_NANG
                        txtChieuCao.Text = empHealth.CHIEU_CAO
                        txtDaHoaLieu.Text = empHealth.DA_HOA_LIEU
                        txtGhiChuSK.Text = empHealth.GHI_CHU_SUC_KHOE
                        txtHuyetAp.Text = empHealth.HUYET_AP
                        txtMatPhai.Text = empHealth.MAT_PHAI
                        txtMatTrai.Text = empHealth.MAT_TRAI
                        txtNhomMau.Text = empHealth.NHOM_MAU
                        txtPhoiNguc.Text = empHealth.PHOI_NGUC
                        txtRangHamMat.Text = empHealth.RANG_HAM_MAT
                        txtTaiMuiHong.Text = empHealth.TAI_MUI_HONG
                        txtTim.Text = empHealth.TIM
                        txtVienGanB.Text = empHealth.VIEM_GAN_B
                        txtLoaiSucKhoe.Text = empHealth.LOAI_SUC_KHOE
                    End If

                End If
            End Using
            isLoad = True
        End If
    End Sub

    Public Overrides Sub ViewInit(ByVal e As System.EventArgs)
        Try
            InitControl()
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Public Overrides Sub BindData()
        Try
            Dim dtData
            Using rep As New ProfileRepository
                dtData = rep.GetOtherList("HU_PAPER")
            End Using
            FillCheckBoxList(lstbPaper, dtData, "NAME", "ID")
            FillCheckBoxList(lstbPaperFiled, dtData, "NAME", "ID")
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try

    End Sub

    Protected Sub InitControl()
        Try
            'Khoi tao ToolBar
            Me.MainToolBar = tbarMainToolBar
            BuildToolbar(Me.MainToolBar,
                         ToolbarItem.Edit,
                         ToolbarItem.Save,
                         ToolbarItem.Cancel)
            CType(Me.MainToolBar.Items(2), RadToolBarButton).CausesValidation = True
            CType(Me.Page, AjaxPage).AjaxManager.ClientEvents.OnRequestStart = "onRequestStart"

        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Public Overrides Sub UpdateControlState()
        Dim rep As New ProfileRepository
        Try
            If ctrlFindOrgPopup IsNot Nothing AndAlso phPopupOrg.Controls.Contains(ctrlFindOrgPopup) Then
                phPopupOrg.Controls.Remove(ctrlFindOrgPopup)
            End If
            If ctrlFindEmployeePopup IsNot Nothing AndAlso phPopupDirect.Controls.Contains(ctrlFindEmployeePopup) Then
                phPopupDirect.Controls.Remove(ctrlFindEmployeePopup)
            End If
            If ctrlFindEmployeePopup IsNot Nothing AndAlso phPopupLevel.Controls.Contains(ctrlFindEmployeePopup) Then
                phPopupLevel.Controls.Remove(ctrlFindEmployeePopup)
            End If
            Select Case isLoadPopup
                Case 1
                    ctrlFindOrgPopup = Me.Register("ctrlFindOrgPopup", "Common", "ctrlFindOrgPopup")
                    phPopupOrg.Controls.Add(ctrlFindOrgPopup)
                Case 2
                    ctrlFindEmployeePopup = Me.Register("ctrlFindEmployeeDirectPopup", "Common", "ctrlFindEmployeePopup")
                    ctrlFindEmployeePopup.MultiSelect = False
                    ctrlFindEmployeePopup.LoadAllOrganization = True
                    phPopupDirect.Controls.Add(ctrlFindEmployeePopup)
                Case 3
                    ctrlFindEmployeePopup = Me.Register("ctrlFindEmployeeLevelPopup", "Common", "ctrlFindEmployeePopup")
                    ctrlFindEmployeePopup.MultiSelect = False
                    ctrlFindEmployeePopup.LoadAllOrganization = True
                    phPopupLevel.Controls.Add(ctrlFindEmployeePopup)
            End Select

            Select Case CurrentState
                Case CommonMessage.STATE_NEW
                    rtIdTitleConcurrent.Visible = False
                    RadPane4.Visible = False
                    chkSaveHistory.Visible = False
                    EnableControlAll(False, cboWorkStatus, txtEmpCODE)
                    EnableControlAll(True, lstbPaper, lstbPaperFiled,
                                        txtBankNo, txtBirthPlace,
                                       txtDaHoaLieu, rntxtTimeID,
                                       txtFirstNameVN, txtGhiChuSK,
                                       txtHomePhone, txtHuyetAp, txtID_NO,
                                       txtIDPlace, txtLangMark,
                                       txtLastNameVN, txtMatPhai, txtMatTrai,
                                       txtMobilePhone, txtNavAddress, txtNhomMau,
                                        txtPassNo, txtPassPlace,
                                       txtPerAddress, txtPerEmail, txtPhoiNguc, txtCareer,
                                       txtPitCode, txtRangHamMat, txtTaiMuiHong, txtTim,
                                       txtVienGanB, txtVisa, txtVisaPlace,
                                       txtWorkEmail, txtWorkPermit, txtWorkPermitPlace,
                                       txtContactPerson, txtContactPersonPhone, txtChucVuDang, txtChucVuDoan,
                                       rdBirthDate, rdContractExpireDate, rdContractEffectDate, rdIDDate,
                                       rdNgayVaoDang, rdNgayVaoDoan, rdPassDate, rdPassExpireDate,
                                       rdVisaDate, rdVisaExpireDate, rdWorkPermitDate, rdWorPermitExpireDate,
                                       txtCanNang, txtChieuCao,
                                       cboAcademy, cboBank, cboBankBranch, cboFamilyStatus, cboWorkplace, cboInsRegion, cboEmpObj,
                                       cboGender, cboLangLevel, txtLanguage, cboLearningLevel, txtLoaiSucKhoe,
                                       txtMajorRemark, cboMajor, cboGraduateSchool, cboNationlity, cboNative, cboNav_Province, cboPer_Province,
                                       cboReligion, cboStaffRank, cboTitle, cboTrainingForm,
                                       cboPer_District, cboPer_Ward, cboNav_District, cboNav_Ward,
                                       hidID, hidOrgID, hidDirectManager, hidLevelManager,
                                       chkDangPhi, chkDoanPhi,
                                       btnFindDirect, btnFindOrg, btnFindLevel)
                    If Not Me.AllowCreate Then
                        txtFirstNameVN.ReadOnly = True
                        txtLastNameVN.ReadOnly = True
                    End If

                Case CommonMessage.STATE_EDIT
                    rtIdTitleConcurrent.Visible = True
                    RadPane4.Visible = True
                    chkSaveHistory.Visible = True
                    EnableControlAll(False, cboWorkStatus, txtEmpCODE)
                    EnableControlAll(True, lstbPaper, lstbPaperFiled,
                                        txtBankNo, txtBirthPlace,
                                       txtDaHoaLieu, rntxtTimeID,
                                       txtFirstNameVN, txtGhiChuSK,
                                       txtHomePhone, txtHuyetAp, txtID_NO,
                                       txtIDPlace, txtLangMark,
                                       txtLastNameVN, txtMatPhai, txtMatTrai,
                                       txtMobilePhone, txtNavAddress, txtNhomMau,
                                        txtPassNo, txtPassPlace,
                                       txtPerAddress, txtPerEmail, txtPhoiNguc, txtCareer,
                                       txtPitCode, txtRangHamMat, txtTaiMuiHong, txtTim,
                                       txtVienGanB, txtVisa, txtVisaPlace,
                                       txtWorkEmail, txtWorkPermit, txtWorkPermitPlace,
                          txtContactPerson, txtContactPersonPhone, txtChucVuDang, txtChucVuDoan,
                          rdBirthDate, rdContractExpireDate, rdContractEffectDate, rdIDDate,
                           rdNgayVaoDang, rdNgayVaoDoan, rdPassDate, rdPassExpireDate,
                          rdVisaDate, rdVisaExpireDate, rdWorkPermitDate, rdWorPermitExpireDate,
                                       txtCanNang, txtChieuCao,
                                       cboAcademy, cboBank, cboBankBranch, cboFamilyStatus,
                                       cboGender, cboLangLevel, cboWorkplace, cboInsRegion, cboEmpObj,
                                       txtLanguage, cboLearningLevel, txtLoaiSucKhoe,
                                       txtMajorRemark, cboMajor, cboGraduateSchool, cboNationlity, cboNative, cboNav_Province, cboPer_Province,
                                       cboReligion, cboStaffRank, cboTitle, cboTrainingForm,
                                       cboPer_District, cboPer_Ward, cboNav_District, cboNav_Ward,
                                       hidID, hidOrgID, hidDirectManager, hidLevelManager,
                                       chkDangPhi, chkDoanPhi,
                                       btnFindDirect, btnFindOrg, btnFindLevel)
                    If Not Me.AllowModify Then
                        txtFirstNameVN.ReadOnly = True
                        txtLastNameVN.ReadOnly = True
                    End If
                    If EmployeeInfo.LAST_WORKING_ID IsNot Nothing Then
                        EnableControlAll(False, cboTitle, cboStaffRank, btnFindOrg)
                    End If
                Case Else
                    EnableControlAll(False, lstbPaper, lstbPaperFiled, cboWorkStatus, txtEmpCODE,
                                       txtBankNo, txtBirthPlace,
                                       txtDaHoaLieu, rntxtTimeID,
                                       txtFirstNameVN, txtGhiChuSK,
                                       txtHomePhone, txtHuyetAp, txtID_NO,
                                       txtIDPlace, txtLangMark,
                                       txtLastNameVN, txtMatPhai, txtMatTrai,
                                       txtMobilePhone, txtNavAddress, txtNhomMau,
                                        txtPassNo, txtPassPlace,
                                       txtPerAddress, txtPerEmail, txtPhoiNguc, txtCareer,
                                       txtPitCode, txtRangHamMat, txtTaiMuiHong, txtTim,
                                       txtVienGanB, txtVisa, txtVisaPlace,
                                       txtWorkEmail, txtWorkPermit, txtWorkPermitPlace,
                                       txtContactPerson, txtContactPersonPhone, txtChucVuDang, txtChucVuDoan,
                                       rdBirthDate, rdContractExpireDate, rdContractEffectDate, rdIDDate,
                                       rdNgayVaoDang, rdNgayVaoDoan, rdPassDate, rdPassExpireDate,
                                       rdVisaDate, rdVisaExpireDate, rdWorkPermitDate, rdWorPermitExpireDate,
                                       txtCanNang, txtChieuCao,
                                       cboAcademy, cboBank, cboBankBranch, cboFamilyStatus,
                                       cboGender, cboLangLevel, cboWorkplace, cboInsRegion, cboEmpObj,
                                       txtLanguage, cboLearningLevel, txtLoaiSucKhoe,
                                       txtMajorRemark, cboMajor, cboGraduateSchool, cboNationlity, cboNative, cboNav_Province, cboPer_Province,
                                       cboReligion, cboStaffRank, cboTitle, cboTrainingForm,
                                       cboPer_District, cboPer_Ward, cboNav_District, cboNav_Ward,
                                       hidID, hidOrgID, hidDirectManager, hidLevelManager,
                                       chkDangPhi, chkDoanPhi,
                                       btnFindDirect, btnFindOrg, btnFindLevel)

            End Select

            ChangeToolbarState()
            Me.Send(CurrentState)
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try

    End Sub

#End Region

#Region "Event"

    Protected Sub OnToolbar_Command(ByVal sender As Object, ByVal e As RadToolBarEventArgs) Handles Me.OnMainToolbarClick
        Try
            Dim objEmployee As New EmployeeDTO
            Dim rep As New ProfileBusinessRepository
            Dim _err As String = ""
            Dim strEmpID As Decimal
            If EmployeeInfo IsNot Nothing Then
                strEmpID = EmployeeInfo.ID
            End If
            Dim checkID_NO As Boolean = False
            Dim dtData As DataTable
            Dim lstEmpID As String = ""

            Dim _param = New ParamDTO With {.ORG_ID = 46,
                       .IS_DISSOLVE = False}
            Dim _filter As New EmployeeDTO

            Select Case CType(e.Item, RadToolBarButton).CommandName
                Case TOOLBARITEM_CREATE
                    ResetControlValue()
                    EmployeeInfo = Nothing
                    CurrentState = CommonMessage.STATE_NEW

                Case TOOLBARITEM_EDIT
                    If EmployeeInfo.WORK_STATUS Is Nothing Or _
                        (EmployeeInfo.WORK_STATUS IsNot Nothing AndAlso _
                         (EmployeeInfo.WORK_STATUS <> ProfileCommon.OT_WORK_STATUS.TERMINATE_ID Or _
                          (EmployeeInfo.WORK_STATUS = ProfileCommon.OT_WORK_STATUS.TERMINATE_ID And _
                           EmployeeInfo.TER_EFFECT_DATE > Date.Now.Date))) Then
                        CurrentState = CommonMessage.STATE_EDIT
                    Else
                        ShowMessage(Translate("Nhân viên trạng thái nghỉ việc. Không được phép chỉnh sửa thông tin."), Utilities.NotifyType.Warning)
                        CurrentState = CommonMessage.STATE_NORMAL
                        Exit Sub
                    End If
                Case TOOLBARITEM_SAVE
                    Page.Validate("EmpProfile")
                    If Page.IsValid Then
                        Select Case CurrentState
                            Case STATE_NEW

                                checkID_NO = rep.ValidateEmployee("EXIST_ID_NO", "", txtID_NO.Text)
                                If Not checkID_NO Then
                                    _filter.ID_NO = txtID_NO.Text

                                    dtData = rep.GetListEmployeePaging(_filter, _param).ToTable()
                                    If dtData IsNot Nothing Then
                                        For index = 0 To dtData.Rows.Count - 1
                                            lstEmpID = lstEmpID + "," + dtData.Rows(index)("EMPLOYEE_CODE").ToString
                                        Next
                                    End If

                                    If lstEmpID <> "" Then
                                        lstEmpID = lstEmpID.Substring(1, lstEmpID.Length - 1)
                                    End If


                                    ctrlMessageBox.MessageText = Translate("Số CMND đã tồn tại cho nhân viên :" + lstEmpID + " Bạn muốn lưu không?")
                                    ctrlMessageBox.ActionName = CommonMessage.ACTION_ID_NO
                                    ctrlMessageBox.DataBind()
                                    ctrlMessageBox.Show()
                                Else
									Dim objEmp As New EmployeeDTO
                                    objEmp.ID_NO = txtID_NO.Text
                                    objEmp.FULLNAME_VN = txtFirstNameVN.Text.ToUpper & " " & txtLastNameVN.Text.ToUpper
                                    objEmp.BIRTH_DATE = rdBirthDate.SelectedDate
                                    checkID_NO = rep.ValidateEmployee("EXIST_ID_TERMINATE", "", txtID_NO.Text, objEmp)
                                    If checkID_NO Then
                                        EmployeeTerID = objEmp.ID
                                        ctrlMessageBox.MessageText = Translate("Nhân viên đã công tác trước đó bạn có muốn lưu thông tin trước đó không?")
                                        ctrlMessageBox.ActionName = "EXIST_ID_TERMINATE"
                                        ctrlMessageBox.DataBind()
                                        ctrlMessageBox.Show()
                                    Else
                                    If Save(strEmpID, _err) Then
                                            Page.Response.Redirect("Default.aspx?mid=Profile&fid=ctrlHU_EmpDtl&group=Business&emp=" & strEmpID & "&state=Normal&noscroll=1&message=success&reload=1")
                                            Exit Sub
                                        Else
                                            ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL) & vbNewLine & Translate(_err), Utilities.NotifyType.Error)
                                            Exit Sub
                                        End If
									End If
                                End If

                            Case STATE_EDIT

                                checkID_NO = rep.ValidateEmployee("EXIST_ID_NO", EmployeeInfo.EMPLOYEE_CODE, txtID_NO.Text)
                                If Not checkID_NO Then
                                    _filter.ID_NO = txtID_NO.Text

                                    dtData = rep.GetListEmployeePaging(_filter, _param).ToTable()
                                    If dtData IsNot Nothing Then
                                        For index = 0 To dtData.Rows.Count - 1
                                            If dtData.Rows(index)("EMPLOYEE_CODE").ToString <> txtEmpCODE.Text Then
                                                lstEmpID = lstEmpID + "," + dtData.Rows(index)("EMPLOYEE_CODE").ToString
                                            End If
                                        Next
                                    End If

                                    If lstEmpID <> "" Then
                                        lstEmpID = lstEmpID.Substring(1, lstEmpID.Length - 1)
                                    End If

                                    ctrlMessageBox.MessageText = Translate("Số CMND đã tồn tại cho nhân viên :" + lstEmpID + ". Bạn muốn lưu không?")
                                    ctrlMessageBox.ActionName = CommonMessage.ACTION_ID_NO
                                    ctrlMessageBox.DataBind()
                                    ctrlMessageBox.Show()
                                Else
                                    If Save(strEmpID, _err) Then
                                        CurrentState = CommonMessage.STATE_NORMAL
                                        ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_SUCCESS), Utilities.NotifyType.Success)
                                    Else
                                        ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL) & vbNewLine & Translate(_err), Utilities.NotifyType.Error)
                                    End If
                                End If

                        End Select
                    End If
                Case TOOLBARITEM_CANCEL
                    If CurrentState = CommonMessage.STATE_NEW Then 'Nếu là trạng thái new thì xóa ảnh hiện tại
                        ScriptManager.RegisterStartupScript(Page, Page.GetType, "Close", "CloseWindow();", True)
                    End If
                    CurrentState = CommonMessage.STATE_NORMAL

                Case TOOLBARITEM_DELETE
                    'Kiểm tra các điều kiện để xóa.
                    If EmployeeInfo.ID = 0 Then 'Nếu đang thêm mới nhân viên thì exit sub.
                        Exit Sub
                    End If
                    'Hiển thị Confirm delete.
                    ctrlMessageBox.MessageText = Translate(CommonMessage.MESSAGE_CONFIRM_DELETE)
                    ctrlMessageBox.ActionName = CommonMessage.TOOLBARITEM_DELETE
                    ctrlMessageBox.DataBind()
                    ctrlMessageBox.Show()

            End Select
            UpdateControlState()

        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub ctrlMessageBox_ButtonCommand(ByVal sender As Object, ByVal e As MessageBoxEventArgs) Handles ctrlMessageBox.ButtonCommand
        Try
            If e.ActionName = CommonMessage.TOOLBARITEM_DELETE And e.ButtonID = MessageBoxButtonType.ButtonYes Then
                Dim strError As String = ""
                Dim lstEmpID = New List(Of Decimal)
                Dim rep As New ProfileBusinessRepository
                lstEmpID.Add(EmployeeInfo.ID)
                rep.DeleteEmployee(lstEmpID, strError)
                If strError = "" Then
                    ResetControlValue()
                    ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_SUCCESS), Utilities.NotifyType.Success)
                    CurrentState = CommonMessage.STATE_NEW
                Else
                    ShowMessage(Translate("Nhân viên này đã có hợp đồng không thể xóa"), Utilities.NotifyType.Warning)
                    CurrentState = CommonMessage.STATE_NORMAL
                End If
                UpdateControlState()
            End If

            ' kiểm tra xem trùng CMND có muốn lưu hay không
            If e.ActionName = CommonMessage.ACTION_ID_NO And e.ButtonID = MessageBoxButtonType.ButtonYes Then
                Dim _err As String = ""
                Dim strEmpID As Decimal
                If EmployeeInfo IsNot Nothing Then
                    strEmpID = EmployeeInfo.ID
                End If

                Select Case CurrentState
                    Case CommonMessage.STATE_NEW
						Select Case CurrentState
                            Case CommonMessage.STATE_NEW

                                If Save(strEmpID, _err) Then
                                    Page.Response.Redirect("Dialog.aspx?mid=Profile&fid=ctrlHU_EmpDtl&group=Business&emp=" & strEmpID & "&state=Normal&noscroll=1&message=success&reload=1")
                                    Exit Sub
                                Else
                                    ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL) & vbNewLine & Translate(_err), Utilities.NotifyType.Error)
                                    Exit Sub
                                End If

                        End Select
                    Case CommonMessage.STATE_EDIT
                        If Save(strEmpID, _err) Then
                            CurrentState = CommonMessage.STATE_NORMAL
                            ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_SUCCESS), Utilities.NotifyType.Success)
                        Else
                            ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL) & vbNewLine & Translate(_err), Utilities.NotifyType.Error)
                        End If
                End Select

            End If

			If e.ActionName = "EXIST_ID_TERMINATE" Then
                Select Case e.ButtonID
                    Case MessageBoxButtonType.ButtonYes
                        Dim objEmpInfo As New EmployeeDTO
                        Dim empCV As New EmployeeCVDTO
                        Dim empEdu As New EmployeeEduDTO
                        Dim empHealth As New EmployeeHealthDTO
                        Dim result As Boolean
                        Dim gID As Decimal
                        Dim _binaryImage As Byte()

                        Using rep As New ProfileBusinessRepository
                            objEmpInfo = rep.GetEmployeeByEmployeeID(EmployeeTerID)
                            rep.GetEmployeeAllByID(objEmpInfo.ID, empCV, empEdu, empHealth)

                            If ImageFile IsNot Nothing Then
                                Dim bytes(ImageFile.ContentLength - 1) As Byte
                                ImageFile.InputStream.Read(bytes, 0, ImageFile.ContentLength)
                                _binaryImage = bytes
                                empCV.IMAGE = ImageFile.GetExtension 'Lưu lại đuôi ảnh để hiển thị trong view ImageUpload
                            Else
                                empCV.IMAGE = ""
                            End If

                            objEmpInfo.WORK_STATUS = Nothing
                            objEmpInfo.JOIN_DATE = Nothing
                            objEmpInfo.JOIN_DATE_STATE = Nothing
                            objEmpInfo.EMPLOYEE_3B_ID = ""
                            objEmpInfo.LAST_WORKING_ID = Nothing
                            objEmpInfo.CONTRACT_ID = Nothing

                            If rep.InsertEmployee(objEmpInfo,
                                                  gID, "", _binaryImage,
                                                  empCV, empEdu, empHealth) Then
                                Page.Response.Redirect("Dialog.aspx?mid=Profile&fid=ctrlHU_EmpDtl&group=Business&emp=" & gID & "&state=Normal&noscroll=1&message=success&reload=1")
                            Else
                                ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL), Utilities.NotifyType.Error)
                            End If
                        End Using
                    Case MessageBoxButtonType.ButtonNo
                            Dim _err As String = ""
                            Dim strEmpID As Decimal

                            Select Case CurrentState
                                Case CommonMessage.STATE_NEW

                                    If Save(strEmpID, _err) Then
                                        Page.Response.Redirect("Dialog.aspx?mid=Profile&fid=ctrlHU_EmpDtl&group=Business&emp=" & strEmpID & "&state=Normal&noscroll=1&message=success&reload=1")
                                        Exit Sub
                                    Else
                                        ShowMessage(Translate(CommonMessage.MESSAGE_TRANSACTION_FAIL) & vbNewLine & Translate(_err), Utilities.NotifyType.Error)
                                        Exit Sub
                                    End If

                            End Select

                End Select
            End If
		Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try

    End Sub

    Protected Sub cboCommon_ItemsRequested(ByVal sender As Object, ByVal e As RadComboBoxItemsRequestedEventArgs) _
    Handles cboAcademy.ItemsRequested, cboBank.ItemsRequested, cboBankBranch.ItemsRequested, cboWorkplace.ItemsRequested,
        cboFamilyStatus.ItemsRequested, cboGender.ItemsRequested, cboLangLevel.ItemsRequested, cboLearningLevel.ItemsRequested, cboMajor.ItemsRequested, _
         cboNationlity.ItemsRequested, cboNative.ItemsRequested, cboNav_Province.ItemsRequested, cboGraduateSchool.ItemsRequested, _
        cboPer_Province.ItemsRequested, cboReligion.ItemsRequested, cboStaffRank.ItemsRequested, cboTitle.ItemsRequested, _
        cboTrainingForm.ItemsRequested, cboWorkStatus.ItemsRequested, cboInsRegion.ItemsRequested, cboEmpObj.ItemsRequested, _
        cboPer_District.ItemsRequested, cboPer_Ward.ItemsRequested, cboNav_District.ItemsRequested, cboNav_Ward.ItemsRequested

        Try
            Using rep As New ProfileRepository
                Dim dtData As DataTable
                Dim sText As String = e.Text
                Dim dValue As Decimal
                Dim sSelectValue As String = IIf(e.Context("value") IsNot Nothing, e.Context("value"), "")
                Select Case sender.ID
                    Case cboGraduateSchool.ID
                        dtData = rep.GetOtherList("HU_GRADUATE_SCHOOL", True)
                    Case cboAcademy.ID
                        dtData = rep.GetOtherList("ACADEMY", True)
                    Case cboBank.ID
                        dtData = rep.GetBankList(True)
                    Case cboBankBranch.ID
                        dValue = IIf(e.Context("valueCustom") IsNot Nothing, e.Context("valueCustom"), 0)
                        dtData = rep.GetBankBranchList(dValue, True)
                    Case cboFamilyStatus.ID
                        dtData = rep.GetOtherList("FAMILY_STATUS", True)
                    Case cboGender.ID
                        dtData = rep.GetOtherList("GENDER", True)
                    Case cboLearningLevel.ID
                        dtData = rep.GetOtherList("LEARNING_LEVEL", True)
                    Case cboMajor.ID
                        dtData = rep.GetOtherList("MAJOR", True)
                    Case cboNationlity.ID
                        dtData = rep.GetNationList(True)
                    Case cboNative.ID
                        dtData = rep.GetOtherList("NATIVE", True)
                    Case cboNav_Province.ID, cboPer_Province.ID, cboWorkplace.ID
                        dtData = rep.GetProvinceList(True)
                    Case cboNav_District.ID, cboPer_District.ID
                        dValue = IIf(e.Context("valueCustom") IsNot Nothing, e.Context("valueCustom"), 0)
                        dtData = rep.GetDistrictList(dValue, True)
                    Case cboNav_Ward.ID, cboPer_Ward.ID
                        dValue = IIf(e.Context("valueCustom") IsNot Nothing, e.Context("valueCustom"), 0)
                        dtData = rep.GetWardList(dValue, True)
                    Case cboReligion.ID
                        dtData = rep.GetOtherList("RELIGION", True)
                    Case cboStaffRank.ID
                        dtData = rep.GetStaffRankList(True)
                    Case cboTitle.ID
                        dValue = IIf(e.Context("valueCustom") IsNot Nothing, e.Context("valueCustom"), 0)
                        dtData = rep.GetTitleByOrgID(dValue, True)
                    Case cboTrainingForm.ID
                        dtData = rep.GetOtherList("TRAINING_FORM", True)
                    Case cboWorkStatus.ID
                        dtData = rep.GetOtherList("WORK_STATUS", True)
                    Case cboLangLevel.ID
                        dtData = rep.GetOtherList("LEARNING_LEVEL", True)
                    Case cboInsRegion.ID
                        dtData = rep.GetInsRegionList(True)
					Case cboEmpObj.ID
                        dtData = rep.GetOtherList("EMP_OBJECT", True)
                End Select

                If sText <> "" Then
                    Dim dtExist = (From p In dtData
                                  Where p("NAME") IsNot DBNull.Value AndAlso _
                                  p("NAME").ToString.ToUpper = sText.ToUpper)

                    If dtExist.Count = 0 Then
                        Dim dtFilter = (From p In dtData
                                  Where p("NAME") IsNot DBNull.Value AndAlso _
                                  p("NAME").ToString.ToUpper.Contains(sText.ToUpper))

                        If dtFilter.Count > 0 Then
                            dtData = dtFilter.CopyToDataTable
                        Else
                            dtData = dtData.Clone
                        End If

                        Dim itemOffset As Integer = e.NumberOfItems
                        Dim endOffset As Integer = Math.Min(itemOffset + sender.ItemsPerRequest, dtData.Rows.Count)
                        e.EndOfItems = endOffset = dtData.Rows.Count

                        For i As Integer = itemOffset To endOffset - 1
                            Dim radItem As RadComboBoxItem = New RadComboBoxItem(dtData.Rows(i)("NAME").ToString(), dtData.Rows(i)("ID").ToString())
                            Select Case sender.ID
                                Case cboTitle.ID
                                    radItem.Attributes("GROUP_NAME") = dtData.Rows(i)("GROUP_NAME").ToString()
                            End Select
                            sender.Items.Add(radItem)
                        Next
                    Else

                        Dim itemOffset As Integer = e.NumberOfItems
                        Dim endOffset As Integer = dtData.Rows.Count
                        e.EndOfItems = True

                        For i As Integer = itemOffset To endOffset - 1
                            Dim radItem As RadComboBoxItem = New RadComboBoxItem(dtData.Rows(i)("NAME").ToString(), dtData.Rows(i)("ID").ToString())
                            Select Case sender.ID
                                Case cboTitle.ID
                                    radItem.Attributes("GROUP_NAME") = dtData.Rows(i)("GROUP_NAME").ToString()
                            End Select
                            sender.Items.Add(radItem)
                        Next
                    End If
                Else
                    Dim itemOffset As Integer = e.NumberOfItems
                    Dim endOffset As Integer = Math.Min(itemOffset + sender.ItemsPerRequest, dtData.Rows.Count)
                    e.EndOfItems = endOffset = dtData.Rows.Count

                    For i As Integer = itemOffset To endOffset - 1
                        Dim radItem As RadComboBoxItem = New RadComboBoxItem(dtData.Rows(i)("NAME").ToString(), dtData.Rows(i)("ID").ToString())
                        Select Case sender.ID
                            Case cboTitle.ID
                                radItem.Attributes("GROUP_NAME") = dtData.Rows(i)("GROUP_NAME").ToString()
                        End Select
                        sender.Items.Add(radItem)
                    Next
                End If
            End Using
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub btnFindDirect_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnFindDirect.Click
        Try
            isLoadPopup = 2
            UpdateControlState()
            ctrlFindEmployeePopup.MustHaveContract = False
            ctrlFindEmployeePopup.Show()
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub btnFindLevel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnFindLevel.Click
        Try
            isLoadPopup = 3
            UpdateControlState()
            ctrlFindEmployeePopup.MustHaveContract = False
            ctrlFindEmployeePopup.Show()
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub ctrlFindEmployeePopup_EmployeeSelected(ByVal sender As Object, ByVal e As System.EventArgs) Handles ctrlFindEmployeePopup.EmployeeSelected
        Dim lstCommonEmployee As New List(Of CommonBusiness.EmployeePopupFindDTO)
        Dim list As List(Of EmployeeDTO)
        Dim rep As New ProfileBusinessRepository
        Dim _param = New ParamDTO With {.ORG_ID = 46,
                   .IS_DISSOLVE = False}
        Dim _filter As New EmployeeDTO
        Try
            lstCommonEmployee = CType(ctrlFindEmployeePopup.SelectedEmployee, List(Of CommonBusiness.EmployeePopupFindDTO))
            If lstCommonEmployee.Count <> 0 Then
                Select Case isLoadPopup
                    Case 2
                        txtDirectManager.Text = lstCommonEmployee(0).FULLNAME_VN
                        hidDirectManager.Value = lstCommonEmployee(0).ID.ToString()
                        'If lstCommonEmployee(0).DIRECT_MANAGER IsNot Nothing Then
                        '    _filter.DIRECT_MANAGER = lstCommonEmployee(0).DIRECT_MANAGER
                        '    list = rep.GetListEmployeePaging(_filter, _param)
                        '    If list.Count > 0 Then
                        '        txtLevelManager.Text = list(0).FULLNAME_VN
                        '        hidLevelManager.Value = list(0).ID.ToString()
                        '    End If
                        'End If
                    Case 3
                        txtLevelManager.Text = lstCommonEmployee(0).FULLNAME_VN
                        hidLevelManager.Value = lstCommonEmployee(0).ID.ToString()
                End Select
            End If
            isLoadPopup = 0
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub btnFindOrg_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnFindOrg.Click
        Try
            isLoadPopup = 1
            UpdateControlState()
            ctrlFindOrgPopup.Show()
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub ctrlPopupCommon_CancelClicked(ByVal sender As Object, ByVal e As EventArgs) Handles ctrlFindOrgPopup.CancelClicked, ctrlFindEmployeePopup.CancelClicked
        isLoadPopup = 0
    End Sub

    Private Sub ctrlOrgPopup_OrganizationSelected(ByVal sender As Object, ByVal e As Common.OrganizationSelectedEventArgs) Handles ctrlFindOrgPopup.OrganizationSelected
        Try
            Dim orgItem = ctrlFindOrgPopup.CurrentItemDataObject
            If orgItem IsNot Nothing Then
                hidOrgID.Value = e.CurrentValue
                txtOrgName.Text = orgItem.NAME_VN
                If orgItem.DESCRIPTION_PATH.ToString.Split(";").Count > 1 Then
                    Dim orgName2 = orgItem.DESCRIPTION_PATH.ToString.Split(";")(1)
                    If orgName2 <> "" Then
                        txtOrgName2.Text = orgName2 '.Substring(orgName2.IndexOf(" - ") + 3)
                    Else
                        txtOrgName.Text = ""
                        txtOrgName2.Text = orgItem.NAME_VN
                    End If
                End If
                'txtOrgName2.ToolTip = Utilities.DrawTreeByString(orgItem.DESCRIPTION_PATH)
            End If
            cboTitle.ClearValue()
            isLoadPopup = 0
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)

        End Try
    End Sub
    '' check CMND có nằm trong danh sách đen hay không
    Private Sub cusNO_ID_ServerValidate(ByVal source As Object, ByVal args As System.Web.UI.WebControls.ServerValidateEventArgs) Handles cusNO_ID.ServerValidate
        Try
            If txtID_NO.Text = "" Then
                args.IsValid = True
                Exit Sub
            End If
            Select Case CurrentState
                Case STATE_NEW
                    Using rep As New ProfileBusinessRepository
                        args.IsValid = rep.ValidateEmployee("EXIST_ID_NO_TERMINATE", "", txtID_NO.Text)
                    End Using
                Case STATE_EDIT
                    Using rep As New ProfileBusinessRepository
                        args.IsValid = rep.ValidateEmployee("EXIST_ID_NO_TERMINATE", EmployeeInfo.EMPLOYEE_CODE, txtID_NO.Text)
                    End Using
                Case Else
                    args.IsValid = True
            End Select
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    Private Sub cusTimeID_ServerValidate(ByVal source As Object, ByVal args As System.Web.UI.WebControls.ServerValidateEventArgs) Handles cusTimeID.ServerValidate
        Try
            If rntxtTimeID.Value Is Nothing Then
                args.IsValid = True
                Exit Sub
            End If
            Select Case CurrentState
                Case STATE_NEW
                    Using rep As New ProfileBusinessRepository
                        args.IsValid = rep.ValidateEmployee("EXIST_TIME_ID", "", rntxtTimeID.Value)
                    End Using
                Case STATE_EDIT
                    Using rep As New ProfileBusinessRepository
                        args.IsValid = rep.ValidateEmployee("EXIST_TIME_ID", EmployeeInfo.EMPLOYEE_CODE, rntxtTimeID.Value)
                    End Using
                Case Else
                    args.IsValid = True
            End Select
        Catch ex As Exception
            DisplayException(Me.ViewName, Me.ID, ex)
        End Try
    End Sub

    'Private Sub cvalEMAIL_ServerValidate(source As Object, args As System.Web.UI.WebControls.ServerValidateEventArgs) Handles cvalEMAIL.ServerValidate
    '    Try
    '        If txtWorkEmail.Text = "" Then
    '            args.IsValid = True
    '            Exit Sub
    '        End If
    '        Select Case CurrentState
    '            Case STATE_NEW
    '                Using rep As New ProfileBusinessRepository
    '                    args.IsValid = rep.ValidateEmployee("EXIST_WORK_EMAIL", "", txtWorkEmail.Text)
    '                End Using
    '            Case STATE_EDIT
    '                Using rep As New ProfileBusinessRepository
    '                    args.IsValid = rep.ValidateEmployee("EXIST_WORK_EMAIL", EmployeeInfo.EMPLOYEE_CODE, txtWorkEmail.Text)
    '                End Using
    '            Case Else
    '                args.IsValid = True
    '        End Select
    '    Catch ex As Exception
    '        DisplayException(Me.ViewName, Me.ID, ex)
    '    End Try
    'End Sub
#End Region

#Region "Custom"

    Public Sub ResetControlValue()
        ClearControlValue(txtEmpCODE, txtBankNo, txtBirthPlace,
                          txtDaHoaLieu, txtDirectManager, txtLevelManager,
                          txtFirstNameVN, txtGhiChuSK,
                          txtHomePhone, txtHuyetAp, txtID_NO,
                          txtIDPlace, txtLangMark,
                          txtLastNameVN, txtMatPhai, txtMatTrai,
                          txtMobilePhone, txtNavAddress, txtNhomMau, txtOrgName,
                          txtOrgName2, txtPassNo, txtPassPlace, rntxtTimeID,
                          txtPerAddress, txtPerEmail, txtPhoiNguc, txtCareer,
                          txtPitCode, txtRangHamMat, txtTaiMuiHong, txtTim,
                          txtVienGanB, txtVisa, txtVisaPlace,
                          txtWorkEmail, txtWorkPermit, txtWorkPermitPlace,
                          txtContactPerson, txtContactPersonPhone, txtChucVuDang, txtChucVuDoan,
                          rdBirthDate, rdContractExpireDate, rdContractEffectDate, rdIDDate,
                          rdJoinDate, rdNgayVaoDang, rdNgayVaoDoan, rdPassDate, rdPassExpireDate,
                          rdVisaDate, rdVisaExpireDate, rdWorkPermitDate, rdWorPermitExpireDate,
                          txtCanNang, txtChieuCao,
                          cboAcademy, cboBank, cboBankBranch, cboFamilyStatus,
                          cboGender, cboLangLevel, cboWorkplace, cboInsRegion, cboEmpObj,
                          txtLanguage, cboLearningLevel, txtLoaiSucKhoe,
                         txtMajorRemark, cboMajor, cboNationlity, cboNative, cboNav_Province, cboPer_Province,
                          cboReligion, cboStaffRank, cboTitle, cboTrainingForm, cboWorkStatus,
                          cboPer_District, cboPer_Ward, cboNav_District, cboNav_Ward,
                          hidID, hidOrgID, hidDirectManager, hidLevelManager,
                          chkDangPhi, chkDoanPhi)
        chkDoanPhi.Checked = True
    End Sub

    Private Function Save(ByRef strEmpID As Decimal, Optional ByRef _err As String = "") As Boolean
        Dim result As Boolean
        Dim gID As Decimal
        Dim rep As New ProfileBusinessRepository
        Dim EmpCV As New EmployeeCVDTO
        Dim EmpEdu As New EmployeeEduDTO
        Dim EmpHealth As EmployeeHealthDTO
        Dim _binaryImage As Byte()
        Try

            Select Case CurrentState
                Case STATE_NEW
                    If Not rep.ValidateEmployee("EXIST_WORK_EMAIL", "", txtWorkEmail.Text) Then
                        ShowMessage("Địa chỉ email đã tồn tại", NotifyType.Warning)
                        Exit Function
                    End If
                Case STATE_EDIT
                    If Not rep.ValidateEmployee("EXIST_WORK_EMAIL", EmployeeInfo.EMPLOYEE_CODE, txtWorkEmail.Text) Then
                        ShowMessage("Địa chỉ email đã tồn tại", NotifyType.Warning)
                        Exit Function
                    End If
            End Select

            'Lấy ảnh của nhân viên

            If EmployeeInfo Is Nothing Then
                EmployeeInfo = New EmployeeDTO
            End If
            If hidID.Value.Trim = "" Then
                EmployeeInfo.ID = 0
            Else
                EmployeeInfo.ID = Decimal.Parse(hidID.Value)
            End If

            If hidDirectManager.Value <> "" Then
                EmployeeInfo.DIRECT_MANAGER = hidDirectManager.Value
            End If
            If hidLevelManager.Value <> "" Then
                EmployeeInfo.LEVEL_MANAGER = hidLevelManager.Value
            End If
            EmployeeInfo.EMPLOYEE_CODE = txtEmpCODE.Text.Trim
            EmployeeInfo.FIRST_NAME_VN = txtFirstNameVN.Text.Trim
            EmployeeInfo.FULLNAME_VN = txtFirstNameVN.Text.Trim & " " & txtLastNameVN.Text.Trim
            EmployeeInfo.LAST_NAME_VN = txtLastNameVN.Text.Trim
            EmployeeInfo.ORG_ID = hidOrgID.Value
            EmployeeInfo.TITLE_ID = cboTitle.SelectedValue
            EmployeeInfo.ITIME_ID = rntxtTimeID.Value
            EmployeeInfo.JOIN_DATE = rdJoinDate.SelectedDate
            EmployeeInfo.JOIN_DATE_STATE = rdJoinDateState.SelectedDate
            If cboStaffRank.SelectedValue <> "" Then
                EmployeeInfo.STAFF_RANK_ID = cboStaffRank.SelectedValue
            End If
            If cboWorkStatus.SelectedValue <> "" Then
                EmployeeInfo.WORK_STATUS = cboWorkStatus.SelectedValue
            End If
            EmpCV = New EmployeeCVDTO
            If cboWorkplace.SelectedValue <> "" Then
                EmpCV.WORKPLACE_ID = Decimal.Parse(cboWorkplace.SelectedValue)
            End If
            If cboInsRegion.SelectedValue <> "" Then
                EmpCV.INS_REGION_ID = Decimal.Parse(cboInsRegion.SelectedValue)
            End If
            If cboGender.SelectedValue <> "" Then
                EmpCV.GENDER = Decimal.Parse(cboGender.SelectedValue)
            End If
            If rdBirthDate.SelectedDate IsNot Nothing Then
                EmpCV.BIRTH_DATE = rdBirthDate.SelectedDate
            End If
            EmpCV.BIRTH_PLACE = txtBirthPlace.Text.Trim()
            If cboFamilyStatus.SelectedValue <> "" Then
                EmpCV.MARITAL_STATUS = Decimal.Parse(cboFamilyStatus.SelectedValue)
            End If
            If cboReligion.SelectedValue <> "" Then
                EmpCV.RELIGION = Decimal.Parse(cboReligion.SelectedValue)
            End If
            If cboNative.SelectedValue <> "" Then
                EmpCV.NATIVE = Decimal.Parse(cboNative.SelectedValue)
            End If
            If cboNationlity.SelectedValue <> "" Then
                EmpCV.NATIONALITY = Decimal.Parse(cboNationlity.SelectedValue)
            End If
            EmpCV.NAV_ADDRESS = txtNavAddress.Text.Trim()
            If cboNav_Province.SelectedValue <> "" Then
                EmpCV.NAV_PROVINCE = Decimal.Parse(cboNav_Province.SelectedValue)
            End If
            If cboNav_District.SelectedValue <> "" Then
                EmpCV.NAV_DISTRICT = Decimal.Parse(cboNav_District.SelectedValue)
            End If
            If cboNav_Ward.SelectedValue <> "" Then
                EmpCV.NAV_WARD = Decimal.Parse(cboNav_Ward.SelectedValue)
            End If
            EmpCV.PER_ADDRESS = txtPerAddress.Text.Trim()
            If cboPer_Province.SelectedValue <> "" Then
                EmpCV.PER_PROVINCE = Decimal.Parse(cboPer_Province.SelectedValue)
            End If
            If cboPer_District.SelectedValue <> "" Then
                EmpCV.PER_DISTRICT = Decimal.Parse(cboPer_District.SelectedValue)
            End If
            If cboPer_Ward.SelectedValue <> "" Then
                EmpCV.PER_WARD = Decimal.Parse(cboPer_Ward.SelectedValue)
            End If
            ' SĐT
            EmpCV.HOME_PHONE = txtHomePhone.Text.Trim()
            EmpCV.MOBILE_PHONE = txtMobilePhone.Text.Trim()
            ' CMND
            EmpCV.ID_NO = txtID_NO.Text.Trim()
            EmpCV.ID_DATE = rdIDDate.SelectedDate
            EmpCV.ID_PLACE = txtIDPlace.Text
            'Hộ chiếu
            EmpCV.PASS_NO = txtPassNo.Text.Trim()
            EmpCV.PASS_DATE = rdPassDate.SelectedDate
            EmpCV.PASS_EXPIRE = rdPassExpireDate.SelectedDate
            EmpCV.PASS_PLACE = txtPassPlace.Text.Trim()
            'Visa
            EmpCV.VISA = txtVisa.Text.Trim()
            EmpCV.VISA_DATE = rdVisaDate.SelectedDate
            EmpCV.VISA_EXPIRE = rdVisaExpireDate.SelectedDate
            EmpCV.VISA_PLACE = txtVisaPlace.Text.Trim()
            'Giấy phép lao động
            EmpCV.WORK_PERMIT = txtWorkPermit.Text.Trim()
            EmpCV.WORK_PERMIT_DATE = rdWorkPermitDate.SelectedDate
            EmpCV.WORK_PERMIT_EXPIRE = rdWorPermitExpireDate.SelectedDate
            EmpCV.WORK_PERMIT_PLACE = txtWorkPermitPlace.Text.Trim()
            EmpCV.PIT_CODE = txtPitCode.Text.Trim()
            EmpCV.PER_EMAIL = txtPerEmail.Text.Trim()
            EmpCV.WORK_EMAIL = txtWorkEmail.Text.Trim()
            EmpCV.CAREER = txtCareer.Text.Trim()
            'Người liên hệ khi cần
            EmpCV.CONTACT_PER = txtContactPerson.Text.Trim()
            'Điện thoại người liên hệ
            EmpCV.CONTACT_PER_PHONE = txtContactPersonPhone.Text.Trim()

            EmpCV.DANG_PHI = chkDangPhi.Checked
            EmpCV.DOAN_PHI = chkDoanPhi.Checked
            If cboBank.SelectedValue <> "" Then
                EmpCV.BANK_ID = Decimal.Parse(cboBank.SelectedValue)
            End If
            If cboBankBranch.SelectedValue <> "" Then
                EmpCV.BANK_BRANCH_ID = Decimal.Parse(cboBankBranch.SelectedValue)
            End If
            EmpCV.NGAY_VAO_DANG = rdNgayVaoDang.SelectedDate
            EmpCV.NGAY_VAO_DOAN = rdNgayVaoDoan.SelectedDate
            EmpCV.CHUC_VU_DANG = txtChucVuDang.Text.Trim()
            EmpCV.CHUC_VU_DOAN = txtChucVuDoan.Text.Trim()
            EmpCV.NOI_VAO_DANG = txtNoiVaoDang.Text.Trim()
            EmpCV.NOI_VAO_DOAN = txtNoiVaoDoan.Text.Trim()
            EmpCV.BANK_NO = txtBankNo.Text.Trim()

            EmpHealth = New EmployeeHealthDTO
            EmpHealth.CAN_NANG = txtCanNang.Text
            EmpHealth.CHIEU_CAO = txtChieuCao.Text
            EmpHealth.DA_HOA_LIEU = txtDaHoaLieu.Text.Trim()
            EmpHealth.GHI_CHU_SUC_KHOE = txtGhiChuSK.Text.Trim()
            EmpHealth.HUYET_AP = txtHuyetAp.Text.Trim()
            EmpHealth.MAT_PHAI = txtMatPhai.Text.Trim()
            EmpHealth.MAT_TRAI = txtMatTrai.Text.Trim()
            EmpHealth.NHOM_MAU = txtNhomMau.Text.Trim()
            EmpHealth.PHOI_NGUC = txtPhoiNguc.Text.Trim()
            EmpHealth.RANG_HAM_MAT = txtRangHamMat.Text.Trim()
            EmpHealth.TAI_MUI_HONG = txtTaiMuiHong.Text.Trim()
            EmpHealth.TIM = txtTim.Text.Trim()
            EmpHealth.VIEM_GAN_B = txtVienGanB.Text.Trim()
            EmpHealth.LOAI_SUC_KHOE = txtLoaiSucKhoe.Text

            EmpEdu = New EmployeeEduDTO
            If cboAcademy.SelectedValue <> "" Then
                EmpEdu.ACADEMY = cboAcademy.SelectedValue
            End If
            If cboLearningLevel.SelectedValue <> "" Then
                EmpEdu.LEARNING_LEVEL = cboLearningLevel.SelectedValue
            End If
            If cboTrainingForm.SelectedValue <> "" Then
                EmpEdu.TRAINING_FORM = cboTrainingForm.SelectedValue
            End If
            If cboLangLevel.SelectedValue <> "" Then
                EmpEdu.LANGUAGE_LEVEL = cboLangLevel.SelectedValue

            End If
            EmpEdu.LANGUAGE_MARK = txtLangMark.Text
            EmpEdu.LANGUAGE = txtLanguage.Text
            If cboMajor.SelectedValue <> "" Then
                EmpEdu.MAJOR = cboMajor.SelectedValue

            End If
            EmpEdu.MAJOR_REMARK = txtMajorRemark.Text
            If cboGraduateSchool.SelectedValue <> "" Then
                EmpEdu.GRADUATE_SCHOOL_ID = cboGraduateSchool.SelectedValue

            End If


            If ImageFile IsNot Nothing Then
                Dim bytes(ImageFile.ContentLength - 1) As Byte
                ImageFile.InputStream.Read(bytes, 0, ImageFile.ContentLength)
                _binaryImage = bytes
                EmpCV.IMAGE = ImageFile.GetExtension 'Lưu lại đuôi ảnh để hiển thị trong view ImageUpload
            Else
                EmpCV.IMAGE = ""
            End If
            EmployeeInfo.lstPaper = lstbPaper.CheckedItems.Select(Function(f) Decimal.Parse(f.Value)).ToList
            EmployeeInfo.lstPaperFiled = lstbPaperFiled.CheckedItems.Select(Function(f) Decimal.Parse(f.Value)).ToList
            If hidID.Value <> "" Then

                EmployeeInfo.ID = Decimal.Parse(hidID.Value)
                EmployeeInfo.IS_HISTORY = chkSaveHistory.Checked
                result = rep.ModifyEmployee(EmployeeInfo, gID, _binaryImage,
                                            EmpCV, _
                                            EmpEdu, _
                                            EmpHealth)

            Else
                result = rep.InsertEmployee(EmployeeInfo, gID, "", _binaryImage,
                                            EmpCV, _
                                            EmpEdu, _
                                            EmpHealth)

            End If
            strEmpID = gID
            Return result

        Catch ex As Exception
            Throw ex
        End Try
    End Function

#End Region

    
    
End Class