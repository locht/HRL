<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap SYSTEM "SqlMap.dtd">
<sqlMap>
  <update id="HU_RPT_CHANGE_SALARY">
    select e.employee_code, e.fullname_vn, W.name_vn, org.NAME_C2, org.NAME_C3,
    W.BASIC_SAL_T, W.SOFT_SAL_T, W.OTHER_SAL_T, CONTRACTUAL_SAL_T as SUM_SAL_T,
    NVL(W.BASIC_SAL_S, 0) BASIC_SAL_S,
    NVL(W.SOFT_SAL_S, 0) SOFT_SAL_S,
    NVL(W.OTHER_SAL_S, 0) OTHER_SAL_S,
    NVL(CONTRACTUAL_SAL_S, 0) SUM_SAL_S,

    W.NO, W.EFFECT_DATE, W.REMARK, W.WORKING_TYPE

    from (
    SELECT emp.Employee_code, T.ORG_ID, T.EMPLOYEE_ID, tit.name_vn, T.WORKING_TYPE,
    T.BASIC_SAL BASIC_SAL_T, T.SOFT_SAL SOFT_SAL_T, T.OTHER_SAL OTHER_SAL_T, T.CONTRACTUAL_SAL CONTRACTUAL_SAL_T,
    S.BASIC_SAL BASIC_SAL_S, S.SOFT_SAL SOFT_SAL_S, S.OTHER_SAL OTHER_SAL_S, S.CONTRACTUAL_SAL CONTRACTUAL_SAL_S,
    d.no, T.EFFECT_DATE, T.REMARK
    FROM (select T.*, row_number() over(partition by T.employee_id order by t.effect_date desc, t.created_date desc) STT
    from Hu_Working T) T
    left join (
    select T.*, row_number() over(partition by T.employee_id order by t.effect_date desc, t.created_date desc) STT
    from Hu_Working T) S
    on T.employee_id=s.employee_id and t.stt = s.stt - 1
    inner join HU_DECISION d ON T.decision_id = d.id
    join hu_employee emp on emp.id = T.employee_id
    join hu_title tit on T.title_id=tit.id
    <isPropertyAvailable property ="STARTDATE">
      <isNotEmpty property="STARTDATE">
        where T.EFFECT_DATE &gt;= TRUNC(#STARTDATE#)
      </isNotEmpty>
    </isPropertyAvailable>
    <isPropertyAvailable property ="ENDDATE">
      <isNotEmpty property="ENDDATE">
        and T.EFFECT_DATE &lt;= TRUNC(#ENDDATE#)
      </isNotEmpty>
    </isPropertyAvailable>
    order by T.employee_id
    ) W
    join Hu_Employee e on e.id = W.EMPLOYEE_ID
    --
    join (
    SELECT CODE_C1, NAME_C1, CODE_C2, NAME_C2, CODE_C3, NAME_C3, CODE_C4, NAME_C4, ID
    FROM (SELECT SUBSTR(REGEXP_SUBSTR(ID_LEVELS, '![^!]*', 1, 1), 2) AS L1,
    SUBSTR(REGEXP_SUBSTR(ORG_NAME, '![^!]*', 1, 1), 2) AS NAME_C1,
    SUBSTR(REGEXP_SUBSTR(CODES, '![^!]*', 1, 1), 2) AS CODE_C1,
    SUBSTR(REGEXP_SUBSTR(ID_LEVELS, '![^!]*', 1, 2), 2) AS L2,
    SUBSTR(REGEXP_SUBSTR(ORG_NAME, '![^!]*', 1, 2), 2) AS NAME_C2,
    SUBSTR(REGEXP_SUBSTR(CODES, '![^!]*', 1, 2), 2) AS CODE_C2,
    SUBSTR(REGEXP_SUBSTR(ID_LEVELS, '![^!]*', 1, 3), 2) AS L3,
    SUBSTR(REGEXP_SUBSTR(ORG_NAME, '![^!]*', 1, 3), 2) AS NAME_C3,
    SUBSTR(REGEXP_SUBSTR(CODES, '![^!]*', 1, 3), 2) AS CODE_C3,
    SUBSTR(REGEXP_SUBSTR(ID_LEVELS, '![^!]*', 1, 4), 2) AS L4,
    SUBSTR(REGEXP_SUBSTR(ORG_NAME, '![^!]*', 1, 4), 2) AS NAME_C4,
    SUBSTR(REGEXP_SUBSTR(CODES, '![^!]*', 1, 4), 2) AS CODE_C4,
    ID
    FROM (SELECT O.ID,
    O.DESCRIPTION_PATH,
    SYS_CONNECT_BY_PATH(O.CODE, '!') CODES,
    SYS_CONNECT_BY_PATH(OT.CODE, '!') ID_LEVELS,
    SYS_CONNECT_BY_PATH(O.NAME_VN, '!') ORG_NAME
    FROM HU_ORGANIZATION O
    INNER JOIN OT_OTHER_LIST OT
    ON O.LEVEL_ID = OT.ID
    START WITH O.PARENT_ID IS NULL
    CONNECT BY PRIOR O.ID = O.PARENT_ID))
    <isPropertyAvailable property ="ORGLISTID">
      <isNotEmpty property="ORGLISTID">
        WHERE ID IN ($ORGLISTID$)
      </isNotEmpty>
    </isPropertyAvailable>
    ) org on W.org_id = org.id
    --

    where BASIC_SAL_T is not null
    and (
    BASIC_SAL_T &lt;> BASIC_SAL_S
    or SOFT_SAL_T &lt;>  SOFT_SAL_S
    or OTHER_SAL_T &lt;>  OTHER_SAL_S
    or OTHER_SAL_S is null
    )
    AND WORKING_TYPE = 0 OR WORKING_TYPE = 2
    Order by e.Employee_code
  </update>
</sqlMap>